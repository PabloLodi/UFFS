Anotações de aula BD I - 06/12/2013
 
Conexão:
psql -U postgres -d BANCO  -h localhost;
 
Mostrar tabelas:
\dt
 
Criar novo banco de dados:
CREATE DATABASE NOME_BANCO;
 
Se conectar a outro banco:
\c NOME_BANCO
 insert into aluno values (121010,'John', '02-03-1989');
Exercícios Marina:
1. Retornar os nomes e a DATA de nascimento de todos os velejadores.
SELECT nome,dtnasc FROM velejador;
 
2. Retornar os nomes e a descrição da classe de todos os velejadores.
SELECT nome,descr FROM velejador JOIN classe ON velejador.classe = classe.cod;
 
3. Retornar os nomes e os tamanhos dos barcos de cor azul (Blue).
SELECT nome,tam FROM barco WHERE cor = 'azul';
 
4. Retornar dados dos velejadores e barcos que tiveram duração das reservas superiores a 20 horas.



//CÓDIGOS DA AULA 12/12/2013

create table aluno
(
        mat integer not null,
        nome varchar(50) not null,
        dtnasc date not null,
        constraint pk_aluno primary key(mat)
);

create table curso
(
        codigo integer not null,
        nome varchar(30) not null,
        constraint pk_curso primary key(codigo)
);

create table disciplina
(
        cod integer not null,
        descr varchar(30) not null,
        cr integer not null,
        codc integer not null
);

create table disciplina
(
        cod integer not null,
        descr varchar(30) not null,
        cr integer not null,select avg(med),descr from matricula join disciplina on matricula.codd = disciplina.cod group by mat,descr;
        codc integer not null,
        constraint pk_disciplina primary key(cod),
        constraint fk_disciplina foreign key (codc) references curso(codigo)
);

create table matricula
(
        mat integer not null,
        codd integer not null,
        sem integer not null,
        med numeric(4,2),
        constraint pk_matricula primary key(mat,codd,sem),
        constraint fk_matricula foreign key(mat) references aluno(mat),
        constraint fk_matricula2 foreign key(codd) references disciplina(cod)
);

//Exercícios 12/12/2013
Nome do aluno e quantidade d edisciplina matriculada:
select a.nome,count(codd) from aluno a left join matricula m on a.mat = m.mat group by a.mat;

Nome da disciplina que não possui matrícula:
select descr from disciplina d left join matricula m on d.cod = m.codd where m.mat IS NULL;

Maior média cadastrada:
select max(med) from matricula;

nome do aluno com a maior média:
select nome from matricula natural join aluno where med = (select max(med) from matricula);

média geral das disciplinas:
select avg(med) from matricula;

média geral por disciplina:
select avg(med),descr from matricula join disciplina on matricula.codd = disciplina.cod group by mat,descr;



